name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      # Step 3: Build with Maven
      - name: Build the app using Maven
        run: |
          mvn clean install -DskipTests

      # Step 4: Set up Docker Buildx
      - name: Docker Buildx Setup
        uses: docker/setup-buildx-action@v3

      # Step 5: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 6: Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/ekart-app-github-actions:latest
          file: docker/Dockerfile

      # Step 7: Azure Login using Service Principal
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Step 8: Set AKS context
      - name: Set AKS context
        uses: azure/aks-set-context@v3
        with:
          resource-group: aks-rg
          cluster-name: aks-cluster

      # Step 9: Deploy to AKS using kubectl
      - name: Deploy to AKS
        run: |
          kubectl apply -f deployment.yml
          kubectl apply -f service.yml

      # Step 10: Show service info
      - name: Get service URL
        run: kubectl get svc ekart-service
